/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardGamesReviewsRouteRouteImport } from './routes/dashboard/games-reviews/route'
import { Route as DashboardGamesReviewsIndexRouteImport } from './routes/dashboard/games-reviews/index'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardGamesReviewsRouteRoute =
  DashboardGamesReviewsRouteRouteImport.update({
    id: '/games-reviews',
    path: '/games-reviews',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardGamesReviewsIndexRoute =
  DashboardGamesReviewsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardGamesReviewsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/games-reviews': typeof DashboardGamesReviewsRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/dashboard/games-reviews/': typeof DashboardGamesReviewsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/dashboard/games-reviews': typeof DashboardGamesReviewsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/games-reviews': typeof DashboardGamesReviewsRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/dashboard/games-reviews/': typeof DashboardGamesReviewsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/games-reviews'
    | '/dashboard/'
    | '/login'
    | '/register'
    | '/dashboard/games-reviews/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/login' | '/register' | '/dashboard/games-reviews'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/games-reviews'
    | '/dashboard/'
    | '/login/'
    | '/register/'
    | '/dashboard/games-reviews/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/games-reviews': {
      id: '/dashboard/games-reviews'
      path: '/games-reviews'
      fullPath: '/dashboard/games-reviews'
      preLoaderRoute: typeof DashboardGamesReviewsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/games-reviews/': {
      id: '/dashboard/games-reviews/'
      path: '/'
      fullPath: '/dashboard/games-reviews/'
      preLoaderRoute: typeof DashboardGamesReviewsIndexRouteImport
      parentRoute: typeof DashboardGamesReviewsRouteRoute
    }
  }
}

interface DashboardGamesReviewsRouteRouteChildren {
  DashboardGamesReviewsIndexRoute: typeof DashboardGamesReviewsIndexRoute
}

const DashboardGamesReviewsRouteRouteChildren: DashboardGamesReviewsRouteRouteChildren =
  {
    DashboardGamesReviewsIndexRoute: DashboardGamesReviewsIndexRoute,
  }

const DashboardGamesReviewsRouteRouteWithChildren =
  DashboardGamesReviewsRouteRoute._addFileChildren(
    DashboardGamesReviewsRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardGamesReviewsRouteRoute: typeof DashboardGamesReviewsRouteRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardGamesReviewsRouteRoute: DashboardGamesReviewsRouteRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
